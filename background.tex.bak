\section{Background}

			In cloud computing, there are multiple recognized service models which dictate how the users can use the given system and what privileges they are given \cite{Mell:2011:SND:2206223}. In its most limited form, a cloud service is offered to user as a predefined application or a set of applications. The users has some interface for interacting with the applications but is given no control over anything else such as other applications, the operating system the application is running on or network and hardware configurations. This is generally known as Software as a Service or SaaS for short. The most permissible service model is known as IaaS, Infrastructure as a Service. In its archetype the user gets access to all fundamental computing resources, possibly including some network components, and can run arbitrary software including operating systems. The user experience should be similar to that with their personal computers. The user is not allowed to access the underlying cloud infrastructure. Between the two falls Platform as a Service (PaaS). PaaS typically allows user to deploy their own applications along with their dependent libraries, tools, services etc. provided that they are supported by the cloud provider. The user has no control over underlying cloud infrastructure, operating system, storage or network but usually can configure certain settings and possibly choose different supporting services the cloud provider offers. There are also other "aaS" such as Data as a Service (DaaS) and Storage as a Service (SaaS) but they are based on one of the three aforementioned service models or are variations or subsets of them. Sometimes the numerous models are referenced with umbrella terms of XaaS and EaaS meaning Everything as a Service for both or Anything as a Service for the former \cite{XaaS}.

Virtualisation in the context of distributed cloud environments usually refers to virtual machines. The core idea is analogous to computer hardware virtualisation. Operating systems offer an interface for the processes to utilize the computer hardware while giving them an illusion that they have all of the hardware for themselves \cite{ArpaciDusseau14-Book}. In reality the resources are shared among many processes. Likewise in cloud environments resources are being share by processes but also by different users running different operating systems, configurations and programs. As with the processes, users are given an impression that they alone have access to the underlying hardware resources, whereas in reality there are multiple users using the same physical machines.


There are several reasons as to why would one prefer a virtualised environment to a non-virtualised one. Obviously in multitenant cloud services it is crucial for the service provider to maximise the use of their hardware resources. Thus it is imperative for the provider to try to share the limited hardware resources among as many users' virtualised environments as possible. Otherwise every user would need their own physical machine in the system which would both require more resources per user and leave resources underused. From the fault tolerance perspective, using virtual machines in a distributed environment decreases their dependency on the underlying physical hardware \cite{Clark05livemigration}. That is because in virtual machine architectures which support live migration of operating system instances can be seamlessly moved from one physical machine to another. This also helps the load-balancing in the distributed system and allows low-level and physical maintenance of the hardware without considerably disrupting the usage of the system. A end-user also has many reasons to use virtualised cloud services. User only needs a lightweight computer with an internet connection to perform computationally challenging tasks in the cloud back-end. Similarly devices with little storage capacity can leverage from a cloud service's vast storage space. Some users would like to use applications and programs not native to their operating system of choice making another virtualised OS a convenient option \cite{ArpaciDusseau14-Book}. Virtualised environment allows software developers to test and debug their software with many different settings, as virtualised environments can have different operating systems and available hardware resources. Naturally this also allows emulating completely different devices \cite{eder2016hypervisor}.

\subsection{Heterogeneous clouds, bare-metal and hybrid}

One of the most common assumptions of the current cloud computing paradigm is that the cloud environment is built on commodity hardware \cite{Heterogeneous}. Even if that was not the case, virtualisation and orchestration techniques more often than not abstract the underlying hardware making it invisible to users. Naturally, this can cause problems if the cluster's devices' capabilities differ from each other drastically. In a multitenant cloud the use cases, workloads and resource needs differ between users, but the cloud is only capable of offering generic solutions for everyone. 

Other motivations to deploy heterogeneous hardware to data centers relating to different use cases and needs stem from bare-metal solutions and green computing movement \cite{Kurp2008}. For example, if a user is running mainly computationally light applications that perhaps only run for a short time, it is wasteful to keep full-fledged rack servers running if the same task could be accomplished with hardware requiring less power and outputting less heat and e.g. a Raspberry PI \cite{raspberry}. In addition, such machines are magnitudes cheaper than traditional rack servers. Virtualisation techniques deployed in current clouds have wide range of benefits but they incur overheads making them undesirable for certain high-performance computing tasks like Big Data analysis and graphical processing. Such tasks may also require speclialised hardware to optimise the performance and thus in the best scenario user should have information of the hardware capabilities and be able to control on which nodes their tasks are run.

Ability to know and control nodes and their capabilities are also relevant in the so-called \textit{hybrid clouds}. One way to classify different clouds is by which party offers the service. Clouds hosted by an organization meant for its internal used are referred to as \textit{Private clouds} whereas cloud service offered by an organisation for other party to rent and use is known as \textit{Public clouds} \cite{cloudcomputingconcepts}. Hybrid cloud is as the name suggests a combination of these two. An organisation may need to provision resources from a public cloud occasionally for different use-cases and workloads to complement their own environment or the private cloud is used to control data more securely as the service using the data is offered in a public cloud. Use cases and motivations for deploying a hybrid cloud vary, but a result is most likely a cluster with heterogeneous hardware.


	
